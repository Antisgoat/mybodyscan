{
  "generatedAt": "2025-10-18T21:50:06.188Z",
  "firebaseConfig": {
    "raw": {},
    "projectId": "",
    "storageBucketInput": null,
    "storageBucketNormalized": null,
    "normalizedFrom": null,
    "missingKeys": [
      "VITE_FIREBASE_API_KEY",
      "VITE_FIREBASE_AUTH_DOMAIN",
      "VITE_FIREBASE_PROJECT_ID",
      "VITE_FIREBASE_STORAGE_BUCKET",
      "VITE_FIREBASE_MESSAGING_SENDER_ID",
      "VITE_FIREBASE_APP_ID"
    ]
  },
  "builds": {
    "web": {
      "command": "npm run build",
      "code": 0,
      "signal": null,
      "stdout": "\n> vite_react_shadcn_ts@0.0.0 build\n> vite build\n\nvite v5.4.20 building for production...\ntransforming...\n✓ 3071 modules transformed.\nrendering chunks...\ncomputing gzip size...\ndist/index.html                                             7.80 kB │ gzip:  1.85 kB\ndist/assets/silhouette-front-C6BufFH5.png                  18.50 kB\ndist/assets/index-BbdvJrBt.css                             71.70 kB │ gzip: 12.38 kB\ndist/assets/pkg-_babel-runtime-l0sNRNKZ.js                  0.00 kB │ gzip:  0.02 kB\ndist/assets/pkg-detect-node-es-l0sNRNKZ.js                  0.00 kB │ gzip:  0.02 kB\ndist/assets/pkg-dom-helpers-l0sNRNKZ.js                     0.00 kB │ gzip:  0.02 kB\ndist/assets/pkg-react-transition-group-CQ21Yfvs.js          0.06 kB │ gzip:  0.07 kB\ndist/assets/pkg-tiny-invariant-BaFNuDhB.js                  0.08 kB │ gzip:  0.09 kB\ndist/assets/pkg-get-nonce-C-Z93AgS.js                       0.09 kB │ gzip:  0.10 kB\ndist/assets/react-query-DTq7xEjD.js                         0.25 kB │ gzip:  0.21 kB\ndist/assets/pkg-clsx-B-dksMZM.js                            0.37 kB │ gzip:  0.24 kB\ndist/assets/pkg-internmap-BkD7Hj8s.js                       0.64 kB │ gzip:  0.31 kB\ndist/assets/pkg-use-callback-ref-CPg2K6fY.js                0.68 kB │ gzip:  0.38 kB\ndist/assets/pkg-firebase-sQTyw44K.js                        0.69 kB │ gzip:  0.46 kB\ndist/assets/pkg-tslib-CDuPK5Eb.js                           0.77 kB │ gzip:  0.41 kB\ndist/assets/pkg-class-variance-authority-DLeVpCSu.js        0.80 kB │ gzip:  0.44 kB\ndist/assets/pkg-prop-types-4wm7Xbao.js                      0.80 kB │ gzip:  0.52 kB\ndist/assets/pkg-victory-vendor-BVu7krTW.js                  0.82 kB │ gzip:  0.43 kB\ndist/assets/pkg-react-style-singleton-BkyPEk4T.js           0.82 kB │ gzip:  0.45 kB\ndist/assets/pkg-use-sync-external-store-D5kqpzl0.js         1.08 kB │ gzip:  0.60 kB\ndist/assets/pkg-use-sidecar-XYc7w_fF.js                     1.27 kB │ gzip:  0.64 kB\ndist/assets/pkg-next-themes-D7y064Ay.js                     1.45 kB │ gzip:  0.81 kB\ndist/assets/pkg-aria-hidden-DvXkyWUv.js                     1.47 kB │ gzip:  0.74 kB\ndist/assets/pkg-d3-path-CimkQT29.js                         2.03 kB │ gzip:  0.91 kB\ndist/assets/pkg-react-is-DcAOwtUU.js                        2.14 kB │ gzip:  0.80 kB\ndist/assets/pkg-react-remove-scroll-bar-D-dj5Vr8.js         2.30 kB │ gzip:  0.96 kB\ndist/assets/pkg-_firebase-logger-CNz1B4Yj.js                2.31 kB │ gzip:  1.02 kB\ndist/assets/pkg-d3-interpolate-DQThwDfD.js                  2.57 kB │ gzip:  1.20 kB\ndist/assets/pkg-eventemitter3-_gqcMBhN.js                   3.04 kB │ gzip:  1.16 kB\ndist/assets/pkg-idb-BXWtuYvb.js                             3.05 kB │ gzip:  1.23 kB\ndist/assets/pkg-d3-array-g_qRI3rN.js                        3.36 kB │ gzip:  1.46 kB\ndist/assets/pkg-scheduler-DYLXRpC5.js                       4.10 kB │ gzip:  1.78 kB\ndist/assets/pkg-_floating-ui-utils-ye2j5HVc.js              4.23 kB │ gzip:  1.80 kB\ndist/assets/pkg-d3-time-CKN_R_9G.js                         4.65 kB │ gzip:  1.66 kB\ndist/assets/pkg-d3-format-CzD4bSOQ.js                       4.79 kB │ gzip:  2.19 kB\ndist/assets/pkg-fast-equals-DlKA5pbF.js                     5.63 kB │ gzip:  2.01 kB\ndist/assets/pkg-recharts-scale-DCsQrNir.js                  6.01 kB │ gzip:  2.20 kB\ndist/assets/pkg-react-remove-scroll-DqhKaz_f.js             6.03 kB │ gzip:  2.47 kB\ndist/assets/pkg-_firebase-component-CD9tLe94.js             6.21 kB │ gzip:  1.76 kB\ndist/assets/pkg-d3-color-9lF95FHy.js                        7.13 kB │ gzip:  3.02 kB\ndist/assets/pkg-_floating-ui-dom-BDTImRdM.js                7.59 kB │ gzip:  3.34 kB\ndist/assets/pkg-react-DjW1UnSv.js                           8.01 kB │ gzip:  3.05 kB\ndist/assets/pkg-_floating-ui-core-De_TkaaY.js               8.32 kB │ gzip:  3.36 kB\ndist/assets/pkg-_capacitor-core-CJ8v3BQZ.js                 8.98 kB │ gzip:  3.55 kB\ndist/assets/pkg-_remix-run-router-CtTzx7Mk.js               9.00 kB │ gzip:  3.98 kB\ndist/assets/SystemCheck-BQOpSSD4.js                         9.02 kB │ gzip:  3.27 kB\ndist/assets/pkg-d3-time-format-DZ7XSvmz.js                  9.03 kB │ gzip:  2.84 kB\ndist/assets/pkg-react-router-Dc75RkZR.js                    9.03 kB │ gzip:  3.42 kB\ndist/assets/DevAudit-DUHpwAL1.js                            9.20 kB │ gzip:  3.50 kB\ndist/assets/OnboardingMBS-Dg14uMdl.js                      10.69 kB │ gzip:  3.45 kB\ndist/assets/pkg-decimal_js-light-ZKFLnszB.js               12.78 kB │ gzip:  5.48 kB\ndist/assets/pkg-d3-shape-BJGLw92x.js                       13.88 kB │ gzip:  3.88 kB\ndist/assets/workouts-DO35lauU.js                           13.93 kB │ gzip:  4.72 kB\ndist/assets/pkg-d3-scale-Q5yFnK5G.js                       15.04 kB │ gzip:  4.94 kB\ndist/assets/pkg-_firebase-app-Bz8HJ5PS.js                  15.87 kB │ gzip:  3.78 kB\ndist/assets/pkg-react-smooth-BrN7vmQk.js                   19.28 kB │ gzip:  5.30 kB\ndist/assets/pkg-tailwind-merge-D696Ktp4.js                 19.91 kB │ gzip:  6.69 kB\ndist/assets/pkg-_firebase-util-Bq73RNsY.js                 21.12 kB │ gzip:  6.25 kB\ndist/assets/pkg-date-fns-B7Ux_hr5.js                       22.64 kB │ gzip:  6.43 kB\ndist/assets/pkg-_tanstack-query-core-BxLtxgO8.js           27.37 kB │ gzip:  8.29 kB\ndist/assets/pkg-lodash-BTQtLe91.js                         27.68 kB │ gzip: 11.45 kB\ndist/assets/icons-Bi-BqT7C.js                              28.04 kB │ gzip:  5.58 kB\ndist/assets/pkg-sonner-BwGBq3BV.js                         32.90 kB │ gzip:  9.43 kB\ndist/assets/meals-CRcaiSzn.js                              35.74 kB │ gzip: 10.34 kB\ndist/assets/pkg-_firebase-webchannel-wrapper-7bMYl0c-.js   52.21 kB │ gzip: 19.04 kB\ndist/assets/scan-DTb5awjp.js                               83.27 kB │ gzip: 26.09 kB\ndist/assets/radix-ushugrg2.js                             113.69 kB │ gzip: 33.78 kB\ndist/assets/auth-DVhP_bkQ.js                              133.33 kB │ gzip: 26.59 kB\ndist/assets/react-BlWnAsOW.js                             138.51 kB │ gzip: 45.22 kB\ndist/assets/coach-o0pteKQw.js                             158.49 kB │ gzip: 46.79 kB\ndist/assets/index-DeBbMiy9.js                             208.82 kB │ gzip: 53.97 kB\ndist/assets/pkg-recharts-Bz0pvBcr.js                      265.38 kB │ gzip: 60.68 kB\ndist/assets/firebase-DvKhgLwh.js                          320.04 kB │ gzip: 73.18 kB\n✓ built in 11.02s\n\n> vite_react_shadcn_ts@0.0.0 postbuild\n> node scripts/write-health-json.mjs\n\n[health] wrote /workspace/mybodyscan/dist/system/health.json\n",
      "stderr": "npm warn Unknown env config \"http-proxy\". This will stop working in the next major version of npm.\nGenerated an empty chunk: \"pkg-_babel-runtime\".\nGenerated an empty chunk: \"pkg-detect-node-es\".\nGenerated an empty chunk: \"pkg-dom-helpers\".\n[plugin:vite:reporter] [plugin vite:reporter] \n(!) /workspace/mybodyscan/src/components/PublicLayout.tsx is dynamically imported by /workspace/mybodyscan/src/App.tsx but also statically imported by /workspace/mybodyscan/src/pages/PreviewFrame.tsx, dynamic import will not move module into another chunk.\n\n",
      "error": null
    },
    "functions": {
      "command": "npm run build",
      "code": 0,
      "signal": null,
      "stdout": "\n> build\n> rimraf lib && tsc --project ./tsconfig.json && node --input-type=module -e \"import { existsSync } from 'node:fs'; if (!existsSync('lib/index.js')) { console.error('Missing lib/index.js after build'); process.exit(2); }\"\n\n",
      "stderr": "npm warn Unknown env config \"http-proxy\". This will stop working in the next major version of npm.\n",
      "error": null
    }
  },
  "healthPayload": {
    "ok": true,
    "appCheckSoft": true,
    "ts": "2025-10-18T21:50:02.268Z"
  },
  "categories": [
    {
      "key": "firebaseInitOrder",
      "title": "Firebase Init Order",
      "status": "FAIL",
      "summary": "App Check setup runs in parallel with getAuth(), so persistence pulls auth before App Check finishes.",
      "details": [
        {
          "message": "initFirebaseApp uses Promise.all for setupAppCheck + setupPersistence, allowing getAuth() before App Check tokens.",
          "file": "src/lib/appInit.ts",
          "line": 60,
          "snippet": "  56 │     return ready;\n  57 │   }\n  58 │   ready = (async () => {\n  59 │     const app = resolveApp();\n  60 │     await Promise.all([setupAppCheck(app), setupPersistence(app)]);\n  61 │   })();\n  62 │   return ready;\n  63 │ }\n  64 │ "
        },
        {
          "message": "getAuth() invoked inside setupPersistence while App Check may still be initializing.",
          "file": "src/lib/appInit.ts",
          "line": 45,
          "snippet": "  41 │ }\n  42 │ \n  43 │ async function setupPersistence(app: FirebaseApp) {\n  44 │   try {\n  45 │     const auth = getAuth(app);\n  46 │     await setPersistence(auth, browserLocalPersistence);\n  47 │   } catch (error) {\n  48 │     if (import.meta.env.DEV) {\n  49 │       console.warn(\"[appInit] Unable to enforce local persistence\", error);"
        },
        {
          "message": "App Check is created with ReCaptchaV3Provider but not awaited before persistence.",
          "file": "src/lib/appInit.ts",
          "line": 29,
          "snippet": "  25 │     return;\n  26 │   }\n  27 │   try {\n  28 │     const key = (import.meta.env.VITE_RECAPTCHA_KEY || \"\").trim();\n  29 │     appCheckInstance = initializeAppCheck(app, {\n  30 │       provider: new ReCaptchaV3Provider(key || \"dummy-key\"),\n  31 │       isTokenAutoRefreshEnabled: true,\n  32 │     });\n  33 │     appCheckInitialized = true;"
        }
      ]
    },
    {
      "key": "authPersistence",
      "title": "Auth Persistence",
      "status": "PASS",
      "summary": "setPersistence(browserLocalPersistence) enforced during init.",
      "details": [
        {
          "message": "Auth persistence forced to browserLocalPersistence with error logging fallback.",
          "file": "src/lib/appInit.ts",
          "line": 46,
          "snippet": "  42 │ \n  43 │ async function setupPersistence(app: FirebaseApp) {\n  44 │   try {\n  45 │     const auth = getAuth(app);\n  46 │     await setPersistence(auth, browserLocalPersistence);\n  47 │   } catch (error) {\n  48 │     if (import.meta.env.DEV) {\n  49 │       console.warn(\"[appInit] Unable to enforce local persistence\", error);\n  50 │     }"
        }
      ]
    },
    {
      "key": "emailAuth",
      "title": "Email",
      "status": "PASS",
      "summary": "safeEmailSignIn wraps signInWithEmailAndPassword with retry on network failures.",
      "details": [
        {
          "message": "safeEmailSignIn awaits initApp() then retries auth/network-request-failed once.",
          "file": "src/lib/firebase.ts",
          "line": 2,
          "snippet": "   1 │ import { getApp, type FirebaseApp } from \"firebase/app\";\n   2 │ import { signInWithEmailAndPassword, type Auth } from \"firebase/auth\";\n   3 │ import { type AppCheck } from \"firebase/app-check\";\n   4 │ import { type Firestore } from \"firebase/firestore\";\n   5 │ import { getFunctions, type Functions } from \"firebase/functions\";\n   6 │ import { getStorage, type FirebaseStorage } from \"firebase/storage\";"
        },
        {
          "message": "Auth page submits credentials via safeEmailSignIn().",
          "file": "src/pages/Auth.tsx",
          "line": 413,
          "snippet": " 409 │     setFormError(null);\n 410 │     setLoading(true);\n 411 │     try {\n 412 │       if (mode === \"signin\") {\n 413 │         await safeEmailSignIn(email, password);\n 414 │       } else {\n 415 │         await createAccountEmail(email, password);\n 416 │       }\n 417 │       navigate(from, { replace: true });"
        }
      ]
    },
    {
      "key": "googleAuth",
      "title": "Google",
      "status": "PASS",
      "summary": "GoogleAuthProvider used with popup→redirect fallback.",
      "details": [
        {
          "message": "Google sign-in leverages signInWithProvider() with fallback to redirect and popup diagnostics.",
          "file": "src/pages/Auth.tsx",
          "line": 467,
          "snippet": " 463 │     setLastOauthError(null);\n 464 │     try {\n 465 │       rememberAuthRedirect(from);\n 466 │       const authInstance = await getAuthSafe();\n 467 │       const googleProvider = new GoogleAuthProvider();\n 468 │       googleProvider.setCustomParameters?.({ prompt: \"select_account\" });\n 469 │       const result = await signInWithProvider(authInstance, googleProvider, {\n 470 │         preferPopup: shouldUsePopupAuth(),\n 471 │       });"
        }
      ]
    },
    {
      "key": "appleAuth",
      "title": "Apple",
      "status": "PASS",
      "summary": "Apple button gated behind APPLE_OAUTH_ENABLED with feature-disabled toast.",
      "details": [
        {
          "message": "Apple provider created with OAuthProvider('apple.com') and finalizeAppleProfile().",
          "file": "src/pages/Auth.tsx",
          "line": 591,
          "snippet": " 587 │     setAppleSetupNote(null);\n 588 │     setLoading(true);\n 589 │     setProviderLoading(\"apple\");\n 590 │     setLastOauthError(null);\n 591 │     const appleProvider = new OAuthProvider(\"apple.com\");\n 592 │     appleProvider.addScope(\"email\");\n 593 │     appleProvider.addScope(\"name\");\n 594 │     try {\n 595 │       rememberAuthRedirect(from);"
        },
        {
          "message": "Apple sign-in short-circuits unless APPLE_OAUTH_ENABLED is true, surfacing configuration guidance.",
          "file": "src/pages/Auth.tsx",
          "line": 582,
          "snippet": " 578 │       });\n 579 │       return;\n 580 │     }\n 581 │ \n 582 │     if (!appleFeatureEnabled) {\n 583 │       handleAppleFeatureDisabled();\n 584 │       return;\n 585 │     }\n 586 │ "
        }
      ]
    },
    {
      "key": "demoFlow",
      "title": "Demo (Anon + Read-only)",
      "status": "PASS",
      "summary": "Demo explore uses anonWithRetry() and persistDemoFlags().",
      "details": [
        {
          "message": "Anon demo flow defined via anonWithRetry().",
          "file": "src/pages/Auth.tsx",
          "line": 27,
          "snippet": "  23 │ import { getAuthSafe } from \"@/lib/appInit\";\n  24 │ import {\n  25 │   signInWithPopup,\n  26 │   signInWithRedirect,\n  27 │   signInAnonymously,\n  28 │   type Auth as FirebaseAuth,\n  29 │   type AuthProvider,\n  30 │   type UserCredential,\n  31 │   GoogleAuthProvider,"
        },
        {
          "message": "Firestore writes funnel through assertNotDemoWrite() to enforce read-only demo.",
          "file": "src/lib/dbWrite.ts",
          "line": 1,
          "snippet": "   1 │ import { assertNotDemoWrite } from \"./demoGuard\";\n   2 │ import {\n   3 │   addDoc as _addDoc,\n   4 │   setDoc as _setDoc,\n   5 │   updateDoc as _updateDoc,"
        }
      ]
    },
    {
      "key": "firebaseConfig",
      "title": "Firebase Web Config",
      "status": "WARN",
      "summary": "Firebase config normalizes firebasestorage.app buckets to appspot.com. Local env missing VITE_FIREBASE_API_KEY, VITE_FIREBASE_AUTH_DOMAIN, VITE_FIREBASE_PROJECT_ID, VITE_FIREBASE_STORAGE_BUCKET, VITE_FIREBASE_MESSAGING_SENDER_ID, VITE_FIREBASE_APP_ID.",
      "details": [
        {
          "message": "storageBucket rewrites firebasestorage.app hosts to <projectId>.appspot.com and surfaces missing env keys.",
          "file": "src/config/firebaseConfig.ts",
          "line": 96,
          "snippet": "  92 │   };\n  93 │ \n  94 │   if (config.storageBucket.endsWith(\"firebasestorage.app\")) {\n  95 │     meta.normalizedFrom = config.storageBucket;\n  96 │     config.storageBucket = `${config.projectId}.appspot.com`;\n  97 │     meta.storageBucketNormalized = config.storageBucket;\n  98 │   }\n  99 │ \n 100 │   const miss = requiredMissing(config);"
        },
        {
          "message": "Config reports missing env keys via getFirebaseConfigMissingEnvKeys().",
          "file": "src/config/firebaseConfig.ts",
          "line": 12,
          "snippet": "   8 │   measurementId?: string;\n   9 │ };\n  10 │ \n  11 │ type FirebaseConfigMeta = {\n  12 │   missingEnvKeys: string[];\n  13 │   usedFallbackKeys: string[];\n  14 │   storageBucketInput: string;\n  15 │   storageBucketNormalized: string;\n  16 │   normalizedFrom?: string | null;"
        }
      ]
    },
    {
      "key": "functions",
      "title": "Functions Engines/Build",
      "status": "PASS",
      "summary": "Functions engines pinned to Node 20.",
      "details": [
        {
          "message": "functions/package.json engines.node = \"20\"",
          "file": "functions/package.json",
          "line": 4,
          "snippet": "   1 │ {\n   2 │   \"type\": \"module\",\n   3 │   \"engines\": {\n   4 │     \"node\": \"20\"\n   5 │   },\n   6 │   \"main\": \"lib/index.js\",\n   7 │   \"scripts\": {\n   8 │     \"clean\": \"rimraf lib\","
        },
        {
          "message": "functions/tsconfig.json targets NodeNext modules and outDir lib.",
          "file": "functions/tsconfig.json",
          "line": 3,
          "snippet": "   1 │ {\n   2 │   \"compilerOptions\": {\n   3 │     \"module\": \"NodeNext\",\n   4 │     \"moduleResolution\": \"NodeNext\",\n   5 │     \"target\": \"ES2022\",\n   6 │     \"outDir\": \"lib\",\n   7 │     \"noEmit\": false,"
        }
      ]
    },
    {
      "key": "health",
      "title": "Health/Hosting",
      "status": "PASS",
      "summary": "Hosting rewrites /system/health and SPA fallback present. dist/system/health.json present after build.",
      "details": [
        {
          "message": "firebase.json rewrites /system/health to /system/health.json and includes SPA fallback.",
          "file": "firebase.json",
          "line": 103,
          "snippet": "  99 │         \"function\": \"stripeWebhook\",\n 100 │         \"functionRegion\": \"us-central1\"\n 101 │       },\n 102 │       {\n 103 │         \"source\": \"/system/health\",\n 104 │         \"destination\": \"/system/health.json\"\n 105 │       },\n 106 │       {\n 107 │         \"source\": \"**\","
        },
        {
          "message": "scripts/write-health-json.mjs writes dist/system/health.json during postbuild.",
          "file": "scripts/write-health-json.mjs",
          "line": 20,
          "snippet": "  16 │   ts: new Date().toISOString(),\n  17 │ };\n  18 │ \n  19 │ const outputPath = join(targetDir, \"health.json\");\n  20 │ writeFileSync(outputPath, `${JSON.stringify(payload, null, 2)}\\n`, \"utf8\");\n  21 │ \n  22 │ console.log(`[health] wrote ${outputPath}`);\n  23 │ "
        }
      ]
    },
    {
      "key": "creditsClaims",
      "title": "Credits/Claims",
      "status": "PASS",
      "summary": "refreshClaims callable invoked from refreshClaimsNow().",
      "details": [
        {
          "message": "refreshClaimsNow() calls httpsCallable(functions, \"refreshClaims\") then forces ID token refresh.",
          "file": "src/lib/auth.ts",
          "line": 167,
          "snippet": " 163 │   if (!current) {\n 164 │     throw new Error(\"auth/no-current-user\");\n 165 │   }\n 166 │   try {\n 167 │     await httpsCallable(functions, \"refreshClaims\")({});\n 168 │   } catch (error) {\n 169 │     if (import.meta.env.DEV) {\n 170 │       console.warn(\"[auth] refreshClaims callable failed\", error);\n 171 │     }"
        },
        {
          "message": "CreditsBadge renders ∞ for dev role or unlimited testers.",
          "file": "src/components/CreditsBadge.tsx",
          "line": 5,
          "snippet": "   1 │ import { useCredits } from \"@/hooks/useCredits\";\n   2 │ \n   3 │ export function CreditsBadge() {\n   4 │   const { credits, unlimited, loading, demo, tester, role } = useCredits();\n   5 │   const isDev = role === \"dev\";\n   6 │   const showInfinity = unlimited || isDev;\n   7 │   const displayCredits = loading ? \"…\" : showInfinity ? \"∞\" : credits;\n   8 │ \n   9 │   return ("
        }
      ]
    }
  ],
  "fixPlan": [
    "Sequence initFirebaseApp() so setupAppCheck(app) awaits before setupPersistence(app) to avoid getAuth() without App Check tokens (src/lib/appInit.ts).",
    "Populate VITE_FIREBASE_* env vars for the production project and ensure storageBucket resolves to <projectId>.appspot.com (.env / hosting config)."
  ]
}
