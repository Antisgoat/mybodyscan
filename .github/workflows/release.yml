name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

      - name: Build web application
        run: npm run build

      - name: Build Cloud Functions
        run: npm --prefix functions run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            functions/lib/
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

      - name: Build web application
        run: npm run build

      - name: Install and build functions
        run: |
          npm --prefix functions ci
          npm --prefix functions run build

      - name: Deploy Cloud Functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
        run: npx firebase-tools deploy --only functions --project ${{ secrets.FIREBASE_PROJECT }} --force

      - name: Deploy Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
        run: npx firebase-tools deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT }} --force

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false