name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_REGISTRY: https://registry.npmjs.org/
      NPM_CONFIG_ALWAYS_AUTH: 'false'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci || npm install
      - name: Install functions deps
        run: npm ci || npm install
        working-directory: functions
        if: ${{ hashFiles('functions/package.json') != '' }}
      - name: Create env file
        run: |
          cat > .env.production <<'EOF'
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=mybodyscan-f3daf
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET || 'mybodyscan-f3daf.appspot.com' }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          EOF
      - run: npm run lint
      - run: npm test
      - run: npm run build
      - run: npm run pretest:e2e
      - run: npx firebase emulators:exec --only firestore,auth,storage,functions "npm run test:e2e"
      - name: Lighthouse (PR)
        if: github.event_name == 'pull_request'
        run: npm run lighthouse || true
        env:
          PREVIEW_URL: http://localhost:5173
      - name: Lighthouse (push)
        if: github.event_name != 'pull_request'
        run: npm run lighthouse
        env:
          PREVIEW_URL: http://localhost:5173
