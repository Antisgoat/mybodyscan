name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_REGISTRY: https://registry.npmjs.org/
      NPM_CONFIG_ALWAYS_AUTH: 'false'
      NODE_AUTH_TOKEN: ''
      npm_config_cache: ${{ runner.temp }}/npm-cache-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          registry-url: https://registry.npmjs.org/
      - name: Determine comparison ref
        id: diff-base
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "ref=origin/${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
          elif git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "ref=$(git rev-parse HEAD^)" >> "$GITHUB_OUTPUT"
          else
            echo "ref=" >> "$GITHUB_OUTPUT"
          fi
      - name: Install root dependencies
        run: |
          set -euo pipefail
          node -v
          npm -v
          npm config get registry
          npm config get always-auth
          npm cache clean --force
          if npm ci --no-audit --no-fund; then
            exit 0
          fi
          echo "npm ci failed; attempting lockfile regeneration"
          npm install --no-audit --no-fund
          npm ci --no-audit --no-fund
      - name: Ensure rules testing dependency absent at root
        run: |
          set -euo pipefail
          if npm ls @firebase/rules-unit-testing >/dev/null 2>&1; then
            echo "::error::@firebase/rules-unit-testing should not be installed at the root"
            exit 1
          fi
      - name: Create env file
        run: |
          cat > .env.production <<'EOF'
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=mybodyscan-f3daf
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET || 'mybodyscan-f3daf.appspot.com' }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          EOF
      - run: npm run lint
      - run: npm test
      - run: npm run build
      - name: Install functions dependencies
        if: ${{ hashFiles('functions/package.json') != '' }}
        working-directory: functions
        run: |
          set -euo pipefail
          node -v
          npm -v
          npm config get registry
          npm config get always-auth
          if [ ! -f package-lock.json ]; then
            npm install --omit=dev --no-audit --no-fund
            exit 0
          fi
          LOCK_CHANGED=false
          BASE_REF="${{ steps.diff-base.outputs.ref }}"
          if [ -n "$BASE_REF" ]; then
            if git diff --name-only "$BASE_REF"...HEAD -- functions/package-lock.json | grep -q 'functions/package-lock\.json'; then
              LOCK_CHANGED=true
            fi
          fi
          if [ "$LOCK_CHANGED" = "true" ]; then
            npm install --omit=dev --no-audit --no-fund
          else
            npm ci --omit=dev --no-audit --no-fund
          fi
      - name: Build functions
        if: ${{ hashFiles('functions/package.json') != '' }}
        working-directory: functions
        run: npm run build
      - run: npm run pretest:e2e
      - run: npx firebase emulators:exec --only firestore,auth,storage,functions "npm run test:e2e"
      - name: Lighthouse (PR)
        if: github.event_name == 'pull_request'
        run: npm run lighthouse || true
        env:
          PREVIEW_URL: http://localhost:5173
      - name: Lighthouse (push)
        if: github.event_name != 'pull_request'
        run: npm run lighthouse
        env:
          PREVIEW_URL: http://localhost:5173
