name: Sanity Check (build + optional preview + health)

on:
  workflow_dispatch:
    inputs:
      run_deploy:
        description: "Deploy a Firebase Hosting preview channel?"
        required: false
        default: "false"
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  sanity:
    runs-on: ubuntu-latest

    env:
      # Defaults; can be overridden by repo/environment secrets.
      FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
      SANITY_BASE_URL: ${{ secrets.SANITY_BASE_URL }}
      RUN_DEPLOY: ${{ github.event.inputs.run_deploy || secrets.SANITY_RUN_DEPLOY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache pnpm/npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node20-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}

      - name: Install root deps
        run: npm ci --prefer-online --no-audit --no-fund

      - name: Build web
        run: npm run build

      - name: Build functions
        run: npm --prefix functions run build

      - name: Install Firebase Tools
        run: npm i -g firebase-tools

      - name: Firebase Preview Deploy (optional)
        if: ${{ env.RUN_DEPLOY == 'true' && secrets.FIREBASE_TOKEN && env.FIREBASE_PROJECT }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          CHANNEL="ci-${GITHUB_RUN_ID}"
          firebase use $FIREBASE_PROJECT
          firebase hosting:channel:deploy $CHANNEL --project $FIREBASE_PROJECT --json > preview.json
          echo "CHANNEL_JSON=$(cat preview.json)" >> $GITHUB_ENV
          # Try to read the preview URL for default site:
          PREVIEW_URL=$(cat preview.json | jq -r '.result[].site .url? // .result[].result[]?.url? // empty' | head -n1)
          if [ -n "$PREVIEW_URL" ]; then
            echo "SANITY_BASE_URL=$(echo $PREVIEW_URL | sed 's#^https\?://##')" >> $GITHUB_ENV
          fi

      - name: Run Sanity Script
        env:
          SANITY_BASE_URL: ${{ env.SANITY_BASE_URL }}
        run: |
          node tools/sanity-check.mjs > sanity.out 2>&1 || true
          echo "SANITY_OUT<<EOF" >> $GITHUB_ENV
          cat sanity.out >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Extract JSON
        id: extract
        run: |
          START=$(grep -n "===SANITY_JSON_START===" -n sanity.out | cut -d: -f1 || true)
          END=$(grep -n "===SANITY_JSON_END===" -n sanity.out | cut -d: -f1 || true)
          if [ -n "$START" ] && [ -n "$END" ]; then
            sed -n "$((START+1)),$((END-1))p" sanity.out > sanity.json
            echo "have_json=true" >> $GITHUB_OUTPUT
          else
            echo "have_json=false" >> $GITHUB_OUTPUT
          fi

      - name: Post PR Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sanityOut = process.env.SANITY_OUT || '';
            let body = "### ðŸ§ª Sanity Check Results\n";
            body += "\n**Base URL:** " + (process.env.SANITY_BASE_URL || 'n/a');
            if (fs.existsSync('sanity.json')) {
              const json = JSON.parse(fs.readFileSync('sanity.json','utf8'));
              body += "\n\n**Summary**\n````\n" + json.summary + "\n````";
              body += "\n<details><summary>Raw JSON</summary>\n\n````json\n" + JSON.stringify(json, null, 2) + "\n````\n</details>";
            } else {
              body += "\n\n````\n" + sanityOut.slice(0, 8000) + "\n````";
            }
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
