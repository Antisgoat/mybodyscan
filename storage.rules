rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null && request.auth.uid != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function validImageUpload() {
      return request.resource.size < 15 * 1024 * 1024 && request.resource.contentType.matches('image/.+');
    }

    match /user_uploads/{uid}/{scanId}/{filename} {
      allow read: if isOwner(uid);
      allow create, update: if isOwner(uid) && validImageUpload();
      allow delete: if isOwner(uid);
    }

    match /public/{path=**} {
      allow read: if true;
      allow write: if false;
    }

    match /{all=**} {
      allow read, write: if false;
    }
  }
}
